{"ast":null,"code":"var _jsxFileName = \"E:\\\\react\\\\todo\\\\src\\\\Todo.js\";\nimport React, { Component } from 'react';\n\nclass Todo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEditing: false\n    };\n    this.handleDelete = this.handleDelete.bind(this);\n    this.toggleForm = this.toggleForm(this);\n  }\n\n  handleDelete() {\n    this.props.deleteTodo(this.props.id);\n  }\n\n  toggleForm() {\n    this.setState({\n      isEditing: true\n    });\n  }\n\n  render() {\n    let result;\n\n    if (this.state.isEditing) {\n      result = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 16\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 19\n        }\n      })));\n    } else {\n      result = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.toggleForm,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 16\n        }\n      }, \"Edit\"), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.handleDelete,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 16\n        }\n      }, \"X\"), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 19\n        }\n      }, this.props.task));\n    }\n\n    return result;\n  }\n\n}\n\nexport default Todo;","map":{"version":3,"sources":["E:/react/todo/src/Todo.js"],"names":["React","Component","Todo","constructor","props","state","isEditing","handleDelete","bind","toggleForm","deleteTodo","id","setState","render","result","task"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,IAAN,SAAmBD,SAAnB,CAA6B;AAC1BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACVC,MAAAA,SAAS,EAAG;AADF,KAAb;AAGA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgB,IAAhB,CAAlB;AACF;;AAEDF,EAAAA,YAAY,GAAG;AACZ,SAAKH,KAAL,CAAWM,UAAX,CAAsB,KAAKN,KAAL,CAAWO,EAAjC;AACF;;AACDF,EAAAA,UAAU,GAAG;AACV,SAAKG,QAAL,CAAc;AACXN,MAAAA,SAAS,EAAG;AADD,KAAd;AAGF;;AACDO,EAAAA,MAAM,GAAG;AACN,QAAIC,MAAJ;;AACA,QAAG,KAAKT,KAAL,CAAWC,SAAd,EAAyB;AACtBQ,MAAAA,MAAM,gBACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACG;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH,CADH,CADH;AAOF,KARD,MASK;AACFA,MAAAA,MAAM,gBACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACG;AAAQ,QAAA,OAAO,EAAE,KAAKL,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADH,eAEG;AAAQ,QAAA,OAAO,EAAE,KAAKF,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFH,eAGM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKH,KAAL,CAAWW,IAAhB,CAHN,CADH;AAOF;;AACD,WAAOD,MAAP;AACF;;AAvCyB;;AA2C7B,eAAeZ,IAAf","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Todo extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         isEditing : false\r\n      }\r\n      this.handleDelete = this.handleDelete.bind(this)\r\n      this.toggleForm = this.toggleForm(this)\r\n   }\r\n   \r\n   handleDelete() {\r\n      this.props.deleteTodo(this.props.id)\r\n   }\r\n   toggleForm() {\r\n      this.setState({\r\n         isEditing : true\r\n      })\r\n   }\r\n   render() {\r\n      let result;\r\n      if(this.state.isEditing) {\r\n         result = (\r\n            <div>\r\n               <form>\r\n                  <input type=\"text\" />\r\n               </form>\r\n            </div>\r\n         )\r\n      }\r\n      else {\r\n         result = (\r\n            <div>\r\n               <button onClick={this.toggleForm}>Edit</button>\r\n               <button onClick={this.handleDelete}>X</button>\r\n                  <li>{this.props.task}</li>\r\n            </div>\r\n         )\r\n      }\r\n      return result;\r\n   }\r\n}\r\n\r\n\r\nexport default Todo;"]},"metadata":{},"sourceType":"module"}